function Main.main 2
	push constant 8001
	push constant 16
	push constant 1
	neg
	call Main.fillMemory 3
	push constant 8000
	call Memory.peek 1
	pop local 1
	push local 1
	call Main.convert 1
	return
function Main.convert 3
	push constant 1
	neg
	pop local 2
	goto WHILE.0.COND
label WHILE.0.BODY
	push local 1
	push constant 1
	add
	pop local 1
	push local 0
	call Main.nextMask 1
	pop local 0
	push constant 9000
	push local 1
	add
	push local 0
	call Memory.poke 2
	push local 1
	push constant 16
	gt
	not
	if-goto IF.1.BODY
	push constant 0
	pop local 2
	goto IF.1.END
label IF.1.BODY
	push argument 0
	push local 0
	and
	push constant 0
	eq
	not
	if-goto IF.2.BODY
	push constant 8000
	push local 1
	add
	push constant 0
	call Memory.poke 2
	goto IF.2.END
label IF.2.BODY
	push constant 8000
	push local 1
	add
	push constant 1
	call Memory.poke 2
label IF.2.END
label IF.1.END
label WHILE.0.COND
	push local 2
	if-goto WHILE.0.BODY
	return
function Main.nextMask 0
	push argument 0
	push constant 0
	eq
	if-goto IF.3.BODY
	push argument 0
	push constant 2
	call Math.multiply 2
	return
	goto IF.3.END
label IF.3.BODY
	push constant 1
	return
label IF.3.END
function Main.fillMemory 0
	goto WHILE.4.COND
label WHILE.4.BODY
	push argument 0
	push argument 2
	call Memory.poke 2
	push argument 1
	push constant 1
	sub
	pop argument 1
	push argument 0
	push constant 1
	add
	pop argument 0
label WHILE.4.COND
	push argument 1
	push constant 0
	gt
	if-goto WHILE.4.BODY
	return