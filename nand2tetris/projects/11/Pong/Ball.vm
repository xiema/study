function Ball.new 0
	push constant 15
	call Memory.alloc 1
	pop pointer 0
	push argument 0
	pop this 0
	push argument 1
	pop this 1
	push argument 2
	pop this 10
	push argument 3
	push constant 6
	sub
	pop this 11
	push argument 4
	pop this 12
	push argument 5
	push constant 6
	sub
	pop this 13
	push constant 0
	pop this 14
	push pointer 0
	call Ball.show 1
	pop temp 0
	push pointer 0
	return
function Ball.dispose 0
	push argument 0
	pop pointer 0
	push pointer 0
	call Memory.deAlloc 1
	push constant 0
	return
function Ball.show 0
	push argument 0
	pop pointer 0
	push constant 1
	neg
	call Screen.setColor 1
	push pointer 0
	call Ball.draw 1
	pop temp 0
	push constant 0
	return
function Ball.hide 0
	push argument 0
	pop pointer 0
	push constant 0
	call Screen.setColor 1
	push pointer 0
	call Ball.draw 1
	pop temp 0
	push constant 0
	return
function Ball.draw 0
	push argument 0
	pop pointer 0
	push this 0
	push this 1
	push this 0
	push constant 5
	add
	push this 1
	push constant 5
	add
	call Screen.drawRectangle 4
	push constant 0
	return
function Ball.getLeft 0
	push argument 0
	pop pointer 0
	push this 0
	return
function Ball.getRight 0
	push argument 0
	pop pointer 0
	push this 0
	push constant 5
	add
	return
function Ball.setDestination 3
	push argument 0
	pop pointer 0
	push argument 1
	push this 0
	sub
	pop this 2
	push argument 2
	push this 1
	sub
	pop this 3
	push this 2
	call Math.abs 1
	pop local 0
	push this 3
	call Math.abs 1
	pop local 1
	push local 0
	push local 1
	lt
	pop this 7
	push this 7
	if-goto IF.0.BODY
	push this 0
	push argument 1
	lt
	pop this 8
	push this 1
	push argument 2
	lt
	pop this 9
	goto IF.0.END
label IF.0.BODY
	push local 0
	pop local 2
	push local 1
	pop local 0
	push local 2
	pop local 1
	push this 1
	push argument 2
	lt
	pop this 8
	push this 0
	push argument 1
	lt
	pop this 9
label IF.0.END
	push constant 2
	push local 1
	call Math.multiply 2
	push local 0
	sub
	pop this 4
	push constant 2
	push local 1
	call Math.multiply 2
	pop this 5
	push constant 2
	push local 1
	push local 0
	sub
	call Math.multiply 2
	pop this 6
	push constant 0
	return
function Ball.move 0
	push argument 0
	pop pointer 0
	push pointer 0
	call Ball.hide 1
	pop temp 0
	push this 4
	push constant 0
	lt
	if-goto IF.1.BODY
	push this 4
	push this 6
	add
	pop this 4
	push this 9
	if-goto IF.2.BODY
	push this 7
	if-goto IF.3.BODY
	push this 1
	push constant 4
	sub
	pop this 1
	goto IF.3.END
label IF.3.BODY
	push this 0
	push constant 4
	sub
	pop this 0
label IF.3.END
	goto IF.2.END
label IF.2.BODY
	push this 7
	if-goto IF.4.BODY
	push this 1
	push constant 4
	add
	pop this 1
	goto IF.4.END
label IF.4.BODY
	push this 0
	push constant 4
	add
	pop this 0
label IF.4.END
label IF.2.END
	goto IF.1.END
label IF.1.BODY
	push this 4
	push this 5
	add
	pop this 4
label IF.1.END
	push this 8
	if-goto IF.5.BODY
	push this 7
	if-goto IF.6.BODY
	push this 0
	push constant 4
	sub
	pop this 0
	goto IF.6.END
label IF.6.BODY
	push this 1
	push constant 4
	sub
	pop this 1
label IF.6.END
	goto IF.5.END
label IF.5.BODY
	push this 7
	if-goto IF.7.BODY
	push this 0
	push constant 4
	add
	pop this 0
	goto IF.7.END
label IF.7.BODY
	push this 1
	push constant 4
	add
	pop this 1
label IF.7.END
label IF.5.END
	push this 0
	push this 10
	gt
	not
	if-goto IF.8.BODY
	goto IF.8.END
label IF.8.BODY
	push constant 1
	pop this 14
	push this 10
	pop this 0
label IF.8.END
	push this 0
	push this 11
	lt
	not
	if-goto IF.9.BODY
	goto IF.9.END
label IF.9.BODY
	push constant 2
	pop this 14
	push this 11
	pop this 0
label IF.9.END
	push this 1
	push this 12
	gt
	not
	if-goto IF.10.BODY
	goto IF.10.END
label IF.10.BODY
	push constant 3
	pop this 14
	push this 12
	pop this 1
label IF.10.END
	push this 1
	push this 13
	lt
	not
	if-goto IF.11.BODY
	goto IF.11.END
label IF.11.BODY
	push constant 4
	pop this 14
	push this 13
	pop this 1
label IF.11.END
	push pointer 0
	call Ball.show 1
	pop temp 0
	push this 14
	return
function Ball.bounce 5
	push argument 0
	pop pointer 0
	push this 2
	push constant 10
	call Math.divide 2
	pop local 2
	push this 3
	push constant 10
	call Math.divide 2
	pop local 3
	push argument 1
	push constant 0
	eq
	if-goto IF.12.BODY
	push this 2
	push constant 0
	lt
	not
	push argument 1
	push constant 1
	eq
	and
	push this 2
	push constant 0
	lt
	push argument 1
	push constant 1
	neg
	eq
	and
	or
	if-goto IF.13.BODY
	push constant 5
	pop local 4
	goto IF.13.END
label IF.13.BODY
	push constant 20
	pop local 4
label IF.13.END
	goto IF.12.END
label IF.12.BODY
	push constant 10
	pop local 4
label IF.12.END
	push this 14
	push constant 1
	eq
	if-goto IF.14.BODY
	push this 14
	push constant 2
	eq
	if-goto IF.15.BODY
	push this 14
	push constant 3
	eq
	if-goto IF.16.BODY
	push constant 0
	pop local 1
	push local 2
	push constant 25
	call Math.multiply 2
	push local 3
	call Math.divide 2
	pop local 0
	push this 0
	push local 0
	push local 4
	call Math.multiply 2
	add
	pop local 0
	goto IF.16.END
label IF.16.BODY
	push constant 250
	pop local 1
	push local 2
	push constant 25
	neg
	call Math.multiply 2
	push local 3
	call Math.divide 2
	pop local 0
	push this 0
	push local 0
	push local 4
	call Math.multiply 2
	add
	pop local 0
label IF.16.END
	goto IF.15.END
label IF.15.BODY
	push constant 0
	pop local 0
	push local 3
	push constant 50
	call Math.multiply 2
	push local 2
	call Math.divide 2
	pop local 1
	push this 1
	push local 1
	push local 4
	call Math.multiply 2
	add
	pop local 1
label IF.15.END
	goto IF.14.END
label IF.14.BODY
	push constant 506
	pop local 0
	push local 3
	push constant 50
	neg
	call Math.multiply 2
	push local 2
	call Math.divide 2
	pop local 1
	push this 1
	push local 1
	push local 4
	call Math.multiply 2
	add
	pop local 1
label IF.14.END
	push pointer 0
	push local 0
	push local 1
	call Ball.setDestination 3
	pop temp 0
	push constant 0
	return